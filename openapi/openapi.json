{
  "components": {
    "schemas": {
      "CreateUserDtoReq": {
        "properties": {
          "email": {
            "format": "email",
            "type": "string",
            "description": "User email address, must be a valid email format",
            "example": "user@example.com"
          },
          "password_hash": {
            "type": "string",
            "description": "Hashed password for user authentication",
            "example": "$2b$10$..."
          },
          "name": {
            "type": "string",
            "description": "Full name of the user",
            "example": "John Doe"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password_hash",
          "name"
        ]
      },
      "CreateUserDtoRes": {
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique identifier of the user",
            "example": 1
          },
          "email": {
            "format": "email",
            "type": "string",
            "description": "User email address, must be a valid email format",
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "description": "Full name of the user",
            "example": "John Doe"
          },
          "last_login_at": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "description": "Date and time of the last user login, can be null",
            "example": "2024-03-15T10:30:00Z"
          },
          "password_hash": {
            "type": "string",
            "description": "Hashed password for user authentication",
            "example": "$2b$10$..."
          },
          "created_at": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "description": "Timestamp when the user account was created",
            "example": "2024-03-15T10:00:00Z"
          },
          "updated_at": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "description": "Timestamp when the user account was last updated",
            "example": "2024-03-15T10:00:00Z"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "name",
          "password_hash",
          "created_at",
          "updated_at"
        ]
      },
      "UpdateUserDtoReq": {
        "properties": {
          "email": {
            "format": "email",
            "type": "string",
            "description": "User email address to update, must be a valid email format",
            "example": "updated@example.com"
          },
          "password_hash": {
            "type": "string",
            "description": "New hashed password for user authentication",
            "example": "$2b$10$..."
          },
          "name": {
            "type": "string",
            "description": "New full name of the user",
            "example": "John Updated Doe"
          }
        },
        "type": "object"
      },
      "UpdateUsersDtoRes": {
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique identifier of the updated user",
            "example": 1
          },
          "email": {
            "format": "email",
            "type": "string",
            "description": "Updated email address of the user",
            "example": "updated@example.com"
          },
          "name": {
            "type": "string",
            "description": "Updated full name of the user",
            "example": "John Updated Doe"
          },
          "last_login_at": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "description": "Date and time of the last user login, can be null",
            "example": "2024-03-15T10:30:00Z"
          },
          "password_hash": {
            "type": "string",
            "description": "Updated hashed password for user authentication",
            "example": "$2b$10$..."
          },
          "created_at": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "description": "Timestamp when the user account was created",
            "example": "2024-03-15T10:00:00Z"
          },
          "updated_at": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "description": "Timestamp when the user account was last updated",
            "example": "2024-03-15T10:30:00Z"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "name",
          "password_hash",
          "created_at",
          "updated_at"
        ]
      },
      "GetUsersDtoReq": {
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique identifier of the user to retrieve",
            "example": 1
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "GetUsersDtoRes": {
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique identifier of the user",
            "example": 1
          },
          "email": {
            "format": "email",
            "type": "string",
            "description": "Email address of the user",
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "description": "Full name of the user",
            "example": "John Doe"
          },
          "last_login_at": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "description": "Date and time of the last user login, can be null",
            "example": "2024-03-15T10:30:00Z"
          },
          "password_hash": {
            "type": "string",
            "description": "Hashed password for user authentication",
            "example": "$2b$10$..."
          },
          "created_at": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "description": "Timestamp when the user account was created",
            "example": "2024-03-15T10:00:00Z"
          },
          "updated_at": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "description": "Timestamp when the user account was last updated",
            "example": "2024-03-15T10:00:00Z"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "name",
          "password_hash",
          "created_at",
          "updated_at"
        ]
      },
      "CreateUsersBulkDtoReq": {
        "properties": {
          "users": {
            "items": {
              "$ref": "#/components/schemas/CreateUserDtoReq"
            },
            "type": "array",
            "description": "Array of users to create",
            "example": [
              {
                "email": "user1@example.com",
                "password_hash": "$2b$10$...",
                "name": "User One"
              },
              {
                "email": "user2@example.com",
                "password_hash": "$2b$10$...",
                "name": "User Two"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "users"
        ]
      },
      "CreateUsersBulkDtoRes": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/CreateUserDtoRes"
            },
            "type": "array",
            "description": "Array of created users",
            "example": [
              {
                "id": 1,
                "email": "user1@example.com",
                "name": "User One",
                "last_login_at": null,
                "created_at": "2024-03-19T12:00:00.000Z",
                "updated_at": "2024-03-19T12:00:00.000Z"
              },
              {
                "id": 2,
                "email": "user2@example.com",
                "name": "User Two",
                "last_login_at": null,
                "created_at": "2024-03-19T12:00:00.000Z",
                "updated_at": "2024-03-19T12:00:00.000Z"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "data"
        ]
      },
      "LoginRequestDto": {
        "properties": {
          "email": {
            "format": "email",
            "type": "string",
            "description": "User email address, must be a valid email format",
            "example": "user@example.com"
          },
          "password_hash": {
            "type": "string",
            "description": "Hashed password for user authentication",
            "example": "$2b$10$..."
          }
        },
        "type": "object",
        "required": [
          "email",
          "password_hash"
        ]
      },
      "LoginResponseDto": {
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Access token for API authentication",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refresh_token": {
            "type": "string",
            "description": "Refresh token for obtaining new access tokens",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "expires_in": {
            "type": "number",
            "description": "Token expiration time in seconds",
            "example": 15552000
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "refresh_token",
          "expires_in"
        ]
      }
    }
  },
  "info": {
    "title": "AQ Open API Map Routing Controllers",
    "version": "1.0.0",
    "description": "API documentation for the AQ Open API Map Routing Controllers"
  },
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/users/": {
      "get": {
        "operationId": "UsersController.getAllUsers",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GetUsersDtoRes"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "Get all users",
        "tags": [
          "Users"
        ],
        "description": "Retrieves a list of all users in the system"
      },
      "post": {
        "operationId": "UsersController.createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDtoReq"
              }
            }
          },
          "description": "CreateUserDtoReq",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserDtoRes"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Create a new user",
        "tags": [
          "Users"
        ],
        "description": "Creates a new user with the provided data"
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "operationId": "UsersController.getUserById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "[^\\/#\\?]+?",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersDtoRes"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "Get user by ID",
        "tags": [
          "Users"
        ],
        "description": "Retrieves a specific user by their ID"
      },
      "put": {
        "operationId": "UsersController.updateUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "[^\\/#\\?]+?",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersDtoRes"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "Update a user",
        "tags": [
          "Users"
        ],
        "description": "Updates an existing user with the provided data"
      },
      "patch": {
        "operationId": "UsersController.patchUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "[^\\/#\\?]+?",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersDtoRes"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "Partially update a user",
        "tags": [
          "Users"
        ],
        "description": "Updates specific fields of an existing user"
      },
      "delete": {
        "operationId": "UsersController.deleteUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "[^\\/#\\?]+?",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersDtoRes"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "Delete a user",
        "tags": [
          "Users"
        ],
        "description": "Deletes an existing user"
      }
    },
    "/api/v1/users/bulk": {
      "post": {
        "operationId": "UsersController.createUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUsersBulkDtoReq"
              }
            }
          },
          "description": "CreateUsersBulkDtoReq",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUsersBulkDtoRes"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request - Invalid input data"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict - One or more users with these emails already exist"
          }
        },
        "summary": "Create multiple users",
        "tags": [
          "Users"
        ],
        "description": "Creates multiple users in a single request"
      }
    },
    "/api/v1/users/login": {
      "post": {
        "operationId": "UsersController.login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "description": "",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "Login user",
        "tags": [
          "Users"
        ],
        "description": "Authenticates a user and returns access and refresh tokens"
      }
    }
  },
  "tags": [
    {
      "name": "Users",
      "description": "Controller for managing user accounts. Provides full CRUD operations"
    }
  ]
}